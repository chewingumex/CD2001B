theme_ipsum()
calificaciones_finales %>%
ggplot(aes(x=calificaciones)) +
geom_histogram(fill='lightblue', color='darkgrey', alpha = 0.6, bins=15) +
geom_vline(aes(xintercept=mean(calificaciones)), linetype='dotted', lwd = 1.5, color='blue') +
geom_density(color = "red", lwd = 1.5, linetype='dotted') +
theme_ipsum()
calificaciones_finales
calificaciones_todo_el_tec = sample(5000, calificaciones_finales$calificaciones, replace = T)
?sample
todos_los_alumnos = 5000
calificaciones_todo_el_tec = sample(x=calificaciones_finales$calificaciones,
size = todos_los_alumnos,
replace = T)
calificaciones_todo_el_tec
ggplot(calificaciones_todo_el_tec, aes(x=calificaciones_todo_el_tec)) +
geom_histogram(fill='lightblue', color='darkgrey', alpha = 0.6, bins=15) +
geom_vline(aes(xintercept=mean(calificaciones)), linetype='dotted', lwd = 1.5, color='blue') +
geom_density(color = "red", lwd = 1.5, linetype='dotted') +
theme_ipsum()
tabla_todos <- tibble(
alumnos  = 1:todos_los_alumnos,
calificaciones_todo_el_tec = sample(x=calificaciones_finales$calificaciones,
size = todos_los_alumnos,
replace = T)
)
tabla_todos
tabla_todos %>%
ggplot(aes(x=calificaciones_todo_el_tec)) +
geom_histogram(fill='lightblue', color='darkgrey', alpha = 0.6, bins=15) +
geom_vline(aes(xintercept=mean(calificaciones)), linetype='dotted', lwd = 1.5, color='blue') +
geom_density(color = "red", lwd = 1.5, linetype='dotted') +
theme_ipsum()
tabla_todos %>%
ggplot(aes(x=calificaciones_todo_el_tec)) +
geom_histogram(fill='lightblue', color='darkgrey', alpha = 0.6, bins=15) +
geom_vline(aes(xintercept=mean(calificaciones_todo_el_tec)), linetype='dotted', lwd = 1.5, color='blue') +
geom_density(color = "red", lwd = 1.5, linetype='dotted') +
theme_ipsum()
tabla_todos %>%
ggplot(aes(x=calificaciones_todo_el_tec)) +
geom_density(color = "red", lwd = 1.5, linetype='dotted') +
geom_histogram(fill='lightblue', color='darkgrey', alpha = 0.6, bins=15) +
geom_vline(aes(xintercept=mean(calificaciones_todo_el_tec)), linetype='dotted', lwd = 1.5, color='blue') +
theme_ipsum()
todos_los_alumnos = 100000
tabla_todos <- tibble(
alumnos  = 1:todos_los_alumnos,
calificaciones_todo_el_tec = sample(x=calificaciones_finales$calificaciones,
size = todos_los_alumnos,
replace = T)
)
tabla_todos %>%
ggplot(aes(x=calificaciones_todo_el_tec)) +
geom_density(color = "red", lwd = 1.5, linetype='dotted') +
geom_histogram(fill='lightblue', color='darkgrey', alpha = 0.6, bins=15) +
geom_vline(aes(xintercept=mean(calificaciones_todo_el_tec)), linetype='dotted', lwd = 1.5, color='blue') +
theme_ipsum()
calificaciones_finales %>%
ggplot(aes(x=calificaciones)) +
geom_histogram(fill='lightblue', color='darkgrey', alpha = 0.6, bins=15) +
geom_vline(aes(xintercept=mean(calificaciones)), linetype='dotted', lwd = 1.5, color='blue') +
geom_density(color = "red", lwd = 1.5, linetype='dotted') +
theme_ipsum()
tabla_todos %>%
ggplot(aes(x=calificaciones_todo_el_tec)) +
geom_histogram(fill='lightblue', color='darkgrey', alpha = 0.6, bins=15) +
geom_vline(aes(xintercept=mean(calificaciones_todo_el_tec)), linetype='dotted', lwd = 1.5, color='blue') +
geom_density(color = "red", lwd = 1.5, linetype='dotted') +
theme_ipsum()
calificaciones_finales %>%
ggplot(aes(x=calificaciones)) +
geom_histogram(fill='lightblue', color='darkgrey', alpha = 0.6, bins=15) +
geom_vline(aes(xintercept=mean(calificaciones)), linetype='dotted', lwd = 1.5, color='blue') +
geom_density(aes(color = "red"), lwd = 1.5, linetype='dotted') +
theme_ipsum()
tabla_todos %>%
ggplot(aes(x=calificaciones_todo_el_tec)) +
geom_histogram(fill='lightblue', color='darkgrey', alpha = 0.6, bins=15) +
geom_vline(aes(xintercept=mean(calificaciones_todo_el_tec)), linetype='dotted', lwd = 1.5, color='blue') +
geom_density(aes(color = "red"), lwd = 1.5, linetype='dotted') +
theme_ipsum()
tabla_todos %>%
ggplot(aes(x=calificaciones_todo_el_tec)) +
geom_histogram(fill='lightblue', color='darkgrey', alpha = 0.6, bins=15) +
geom_vline(aes(xintercept=mean(calificaciones_todo_el_tec)), linetype='dotted', lwd = 1.5, color='blue') +
geom_density(aes(calificaciones_todo_el_tec), lwd = 1.5, linetype='dotted') +
theme_ipsum()
tabla_todos %>%
ggplot(aes(x=calificaciones_todo_el_tec)) +
geom_histogram(fill='lightblue', color='darkgrey', alpha = 0.6, bins=15) +
geom_density(stat = 'density', color = "red", lwd = 1.5, linetype='dotted') +
geom_vline(aes(xintercept=mean(calificaciones_todo_el_tec)), linetype='dotted', lwd = 1.5, color='blue') +
theme_ipsum()
?letters
letters
letters[1:400]
letters
library(id)
install.packahes('id')
install.packages('id')
install.packages('ids')
ids::random_id(todos_los_alumnos, 4)
tabla_todos <- tibble(
alumnos  = ids::random_id(todos_los_alumnos, 4),
calificaciones_todo_el_tec = sample(x = calificaciones_finales$calificaciones,
size = todos_los_alumnos,
replace = T
)
)
tabla_todos %>%
ggplot(aes(x=calificaciones_todo_el_tec)) +
geom_histogram(fill='lightblue', color='darkgrey', alpha = 0.6, bins=15) +
geom_density( color = "red", lwd = 1.5, linetype='dotted') +
geom_vline(aes(xintercept=mean(calificaciones_todo_el_tec)), linetype='dotted', lwd = 1.5, color='blue') +
theme_ipsum()
tabla_todos %>%
ggplot(aes(x=calificaciones_todo_el_tec)) +
geom_histogram(stat = 'density',fill='lightblue', color='darkgrey', alpha = 0.6, bins=15) +
geom_density( color = "red", lwd = 1.5, linetype='dotted') +
geom_vline(aes(xintercept=mean(calificaciones_todo_el_tec)), linetype='dotted', lwd = 1.5, color='blue') +
theme_ipsum()
tabla_todos %>%
ggplot(aes(x=calificaciones_todo_el_tec)) +
geom_histogram(aes(y = after_stat(density)), fill='lightblue', color='darkgrey', alpha = 0.6, bins=15) +
geom_density(color = "red", lwd = 1.5, linetype='dotted') +
geom_vline(aes(xintercept=mean(calificaciones_todo_el_tec)), linetype='dotted', lwd = 1.5, color='blue') +
theme_ipsum()
tabla_todos %>%
ggplot(aes(x=calificaciones_todo_el_tec)) +
geom_histogram(aes(y = after_stat(density)), fill='lightblue', color='darkgrey', alpha = 0.6, bins=15) +
geom_density(stat = 'density', color = "red", lwd = 1.5, linetype='dotted') +
geom_vline(aes(xintercept=mean(calificaciones_todo_el_tec)), linetype='dotted', lwd = 1.5, color='blue') +
theme_ipsum()
tabla_todos %>%
ggplot(aes(x=calificaciones_todo_el_tec)) +
geom_histogram(aes(y = after_stat(density)), fill='lightblue', alpha = 0.6, bins=15) +
geom_density(stat = 'density', color = "red", lwd = 1.5, linetype='dotted') +
geom_vline(aes(xintercept=mean(calificaciones_todo_el_tec)), linetype='dotted', lwd = 1.5, color='blue') +
theme_ipsum()
library(yaml)
library(tidyverse)
library(hrbrthemes)
##################################
################# leer los nombres
nombres <- read_yaml('~/Documents/CD2001B/calificiones_finales/nombres.yaml')
##################################################
### asignarles calificaciones random entre min max
min_cali <- 8.7
max_cali <- 9.5
calificaciones <- seq(from = min_cali,
to = max_cali,
length.out = length(nombres)
)
calificaciones_finales <-
tibble(
nombres = nombres,
calificaciones = calificaciones
)
##################################################
####################### convertirlo en una función
calificador_automatico <- function(min_cali, max_cali, nombres){
return(
tibble(
nombres = nombres,
calificaciones =  runif(n = length(nombres),
min = min_cali,
max = max_cali
)
)
)
}
##################################################
################################ jugar a la ruleta
calificador_automatico(min_cali = 8.7, max_cali = 9.5, nombres = nombres)
##################################################
################################ con mas justicia?
# 9.2
media <- (8.7 + 9.5) / 2
desviacion_estandar <- 0.2
calificaciones_justas <-
rnorm(n=length(nombres),
mean = media,
sd = desviacion_estandar
)
calificador_mas_justo <- function(n, mean, sd, nombres){
return(
tibble(
nombres = nombres,
calificaciones =  rnorm(n=length(nombres),
mean = media,
sd = desviacion_estandar)
)
)
}
calificador_mas_justo(n=length(nombres),
mean = media,
sd = desviacion_estandar,
nombres=nombres)
####################################################
################################ checar que sea neta
calificaciones_finales <-
calificador_mas_justo(n=length(nombres),
mean = media,
sd = desviacion_estandar,
nombres=nombres
)
calificaciones_finales %>%
ggplot(aes(x=calificaciones)) +
geom_histogram(fill='lightblue', color='darkgrey', alpha = 0.6, bins=15) +
geom_vline(aes(xintercept=mean(calificaciones)), linetype='dotted', lwd = 1.5, color='blue') +
geom_density(color = "red", lwd = 1.5, linetype='dotted') +
theme_ipsum()
##########################################################
#### megalomanía: asignarles calificaciones a TODO el Tec
#########################################################
# cuantos alumnos habrá? hmmm... digamos 5,000
todos_los_alumnos = 100000
tabla_todos <- tibble(
alumnos  = ids::random_id(todos_los_alumnos, 4),
calificaciones_todo_el_tec = sample(x = calificaciones_finales$calificaciones,
size = todos_los_alumnos,
replace = T
)
)
tabla_todos %>%
ggplot(aes(x=calificaciones_todo_el_tec)) +
geom_histogram(aes(y = after_stat(density)), fill='lightblue', alpha = 0.6, bins=15) +
geom_density(stat = 'density', color = "red", lwd = 1.5, linetype='dotted') +
geom_vline(aes(xintercept=mean(calificaciones_todo_el_tec)), linetype='dotted', lwd = 1.5, color='blue') +
theme_ipsum()
##########################################################
#### megalomanía: asignarles calificaciones a TODO el Tec
#########################################################
tabla_todos %>%
ggplot(aes(x=calificaciones_todo_el_tec)) +
geom_histogram(aes(y = after_stat(density)), fill='lightblue', alpha = 0.6, bins=8) +
geom_density(stat = 'density', color = "red", lwd = 1.5, linetype='dotted') +
geom_vline(aes(xintercept=mean(calificaciones_todo_el_tec)), linetype='dotted', lwd = 1.5, color='blue') +
theme_ipsum()
tabla_todos %>%
ggplot(aes(x=calificaciones_todo_el_tec)) +
geom_histogram(aes(y = after_stat(density)), fill='lightblue', alpha = 0.6, bins=20) +
geom_vline(aes(xintercept=mean(calificaciones_todo_el_tec)), linetype='dotted', lwd = 1.5, color='blue') +
theme_ipsum()
tabla_todos %>%
ggplot(aes(x=calificaciones_todo_el_tec)) +
geom_histogram(aes(y = after_stat(density)), fill='lightblue', alpha = 0.6, bins=50) +
geom_vline(aes(xintercept=mean(calificaciones_todo_el_tec)), linetype='dotted', lwd = 1.5, color='blue') +
theme_ipsum()
library(yaml)
library(tidyverse)
library(hrbrthemes)
##################################
################# leer los nombres
nombres <- read_yaml('~/Documents/CD2001B/calificiones_finales/nombres.yaml')
##################################################
### asignarles calificaciones random entre min max
min_cali <- 8.7
max_cali <- 9.5
calificaciones <- seq(from = min_cali,
to = max_cali,
length.out = length(nombres)
)
calificaciones_finales <-
tibble(
nombres = nombres,
calificaciones = calificaciones
)
##################################################
####################### convertirlo en una función
calificador_automatico <- function(min_cali, max_cali, nombres){
return(
tibble(
nombres = nombres,
calificaciones =  runif(n = length(nombres),
min = min_cali,
max = max_cali
)
)
)
}
##################################################
################################ jugar a la ruleta
calificador_automatico(min_cali = 8.7, max_cali = 9.5, nombres = nombres)
##################################################
################################ con mas justicia?
# 9.2
media <- (8.7 + 9.5) / 2
desviacion_estandar <- 0.2
calificaciones_justas <-
rnorm(n=length(nombres),
mean = media,
sd = desviacion_estandar
)
calificador_mas_justo <- function(n, mean, sd, nombres){
return(
tibble(
nombres = nombres,
calificaciones =  rnorm(n=length(nombres),
mean = media,
sd = desviacion_estandar)
)
)
}
calificador_mas_justo(n=length(nombres),
mean = media,
sd = desviacion_estandar,
nombres=nombres)
####################################################
################################ checar que sea neta
calificaciones_finales <-
calificador_mas_justo(n=length(nombres),
mean = media,
sd = desviacion_estandar,
nombres=nombres
)
calificaciones_finales %>%
ggplot(aes(x=calificaciones)) +
geom_histogram(fill='lightblue', color='darkgrey', alpha = 0.6, bins=15) +
geom_vline(aes(xintercept=mean(calificaciones)), linetype='dotted', lwd = 1.5, color='blue') +
geom_density(color = "red", lwd = 1.5, linetype='dotted') +
theme_ipsum()
##########################################################
#### megalomanía: asignarles calificaciones a TODO el Tec
#########################################################
# cuantos alumnos habrá? hmmm... digamos 5,000
todos_los_alumnos = 100000
tabla_todos <- tibble(
alumnos  = ids::random_id(todos_los_alumnos, 4),
calificaciones_todo_el_tec = sample(x = calificaciones_finales$calificaciones,
size = todos_los_alumnos,
replace = T
)
)
tabla_todos %>%
ggplot(aes(x=calificaciones_todo_el_tec)) +
geom_histogram(aes(y = after_stat(density)), fill='lightblue', alpha = 0.6, bins=50) +
geom_vline(aes(xintercept=mean(calificaciones_todo_el_tec)), linetype='dotted', lwd = 1.5, color='blue') +
theme_ipsum()
##########################################################
#### megalomanía: asignarles calificaciones a TODO el Tec
#########################################################
library(yaml)
library(tidyverse)
library(hrbrthemes)
##################################
################# leer los nombres
nombres <- read_yaml('~/Documents/CD2001B/calificiones_finales/nombres.yaml')
##################################################
### asignarles calificaciones random entre min max
min_cali <- 8.7
max_cali <- 9.5
calificaciones <- seq(from = min_cali,
to = max_cali,
length.out = length(nombres)
)
calificaciones_finales <-
tibble(
nombres = nombres,
calificaciones = calificaciones
)
##################################################
####################### convertirlo en una función
calificador_automatico <- function(min_cali, max_cali, nombres){
return(
tibble(
nombres = nombres,
calificaciones =  runif(n = length(nombres),
min = min_cali,
max = max_cali
)
)
)
}
##################################################
################################ jugar a la ruleta
calificador_automatico(min_cali = 8.7, max_cali = 9.5, nombres = nombres)
##################################################
################################ con mas justicia?
# 9.2
media <- (8.7 + 9.5) / 2
desviacion_estandar <- 0.3
calificaciones_justas <-
rnorm(n=length(nombres),
mean = media,
sd = desviacion_estandar
)
calificador_mas_justo <- function(n, mean, sd, nombres){
return(
tibble(
nombres = nombres,
calificaciones =  rnorm(n=length(nombres),
mean = media,
sd = desviacion_estandar)
)
)
}
calificador_mas_justo(n=length(nombres),
mean = media,
sd = desviacion_estandar,
nombres=nombres)
####################################################
################################ checar que sea neta
calificaciones_finales <-
calificador_mas_justo(n=length(nombres),
mean = media,
sd = desviacion_estandar,
nombres=nombres
)
calificaciones_finales %>%
ggplot(aes(x=calificaciones)) +
geom_histogram(fill='lightblue', color='darkgrey', alpha = 0.6, bins=15) +
geom_vline(aes(xintercept=mean(calificaciones)), linetype='dotted', lwd = 1.5, color='blue') +
geom_density(color = "red", lwd = 1.5, linetype='dotted') +
theme_ipsum()
##########################################################
#### megalomanía: asignarles calificaciones a TODO el Tec
#########################################################
# cuantos alumnos habrá? hmmm... digamos 5,000
todos_los_alumnos = 100000
tabla_todos <- tibble(
alumnos  = ids::random_id(todos_los_alumnos, 4),
calificaciones_todo_el_tec = sample(x = calificaciones_finales$calificaciones,
size = todos_los_alumnos,
replace = T
)
)
tabla_todos %>%
ggplot(aes(x=calificaciones_todo_el_tec)) +
geom_histogram(aes(y = after_stat(density)), fill='lightblue', alpha = 0.6, bins=50) +
geom_vline(aes(xintercept=mean(calificaciones_todo_el_tec)), linetype='dotted', lwd = 1.5, color='blue') +
theme_ipsum()
##########################################################
#### megalomanía: asignarles calificaciones a TODO el Tec
#########################################################
?tally
tabla_todos %>%
tally
tabla_todos %>%
ggplot(aes(x=calificaciones_todo_el_tec)) +
geom_freqpoly(binwidth = 500)
tabla_todos %>%
ggplot(aes(x=calificaciones_todo_el_tec)) +
geom_histogram(fill='lightblue', alpha = 0.6, bins=50)
tabla_todos %>%
ggplot(aes(x=calificaciones_todo_el_tec)) +
geom_histogram(fill='lightblue', alpha = 0.6, bins=50) +
geom_vline(aes(xintercept=mean(calificaciones_todo_el_tec)), linetype='dotted', lwd = 1.5, color='blue') +
theme_ipsum()
tabla_todos
tabla_todos %>%
ggplot(aes(x=calificaciones)) +
geom_histogram(fill='lightblue', alpha = 0.6, bins=50) +
geom_vline(aes(xintercept=mean(calificaciones)), linetype='dotted', lwd = 1.5, color='blue') +
theme_ipsum()
todos_los_alumnos = 100000
tabla_todos <- tibble(
alumnos  = ids::random_id(todos_los_alumnos, 4),
calificaciones = sample(x = calificaciones_finales$calificaciones,
size = todos_los_alumnos,
replace = T
)
)
tabla_todos %>%
ggplot(aes(x=calificaciones)) +
geom_histogram(fill='lightblue', alpha = 0.6, bins=50) +
geom_vline(aes(xintercept=mean(calificaciones)), linetype='dotted', lwd = 1.5, color='blue') +
theme_ipsum()
todos_los_alumnos = 10000000
tabla_todos <- tibble(
alumnos  = ids::random_id(todos_los_alumnos, 4),
calificaciones = sample(x = calificaciones_finales$calificaciones,
size = todos_los_alumnos,
replace = T
)
)
mean(tabla_todos$calificaciones)
mean(calificaciones)
sample(calificaciones, size = 20, replace = T)
muestras_bootsrap <- c()
for (i in 1:1000){
muestras_bootsrap <- c(sample(calificaciones, size = 20, replace = T), muestras_bootsrap)
}
muestras_bootsrap
muestras_bootsrap <- list()
for (i in 1:1000){
muestras_bootsrap[[i]] <- sample(calificaciones, size = 20, replace = T)
}
muestras_bootsrap
as_tibble(muestras_bootsrap)
as_tibble(muestras_bootsrap, .name_repair = 'universal')
tibble(muestras_bootsrap, .name_repair = 'universal')
tibble(muestras_bootsrap) %>%
unnest
tibble(muestras_bootsrap) %>%
t %>%
unnest
tibble(muestras_bootsrap) %>%
t
tibble(muestras_bootsrap) %>%
map_dfr(,
.)
tibble(muestras_bootsrap) %>%
map_dfr(,
.x)
tibble(muestras_bootsrap) %>%
map_dfr(,
.f = .x)
tibble(muestras_bootsrap) %>%
map_dfr(,
.f = .)
