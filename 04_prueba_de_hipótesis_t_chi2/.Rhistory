t_stat <- (mean(heights) - 69) / (sd(heights) / sqrt(length(heights)))
?pt
samp1 <- global_monitor %>%
sample_n(50)
no_helmet %>%
specify(response = text_ind, success = "yes") %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "prop") %>%
get_ci(level = 0.95)
heights <- c(66, 65, 69, 70, 71, 67, 68, 65, 64, 72, 70, 67, 65, 68, 69, 71, 70, 67, 65, 68)
ggplot(data = data.frame(heights), aes(x = heights)) +
geom_histogram(aes(y = ..density..), bins = 8, color = "black", fill = "white") +
geom_density(color = "red", lwd = 1.5) +
labs(title = "Histogram of Heights", x = "Height (inches)", y = "Density") +
theme_ipsum()
?pt
p_val <- 2 * pt(abs(t_stat), df = length(heights) - 1, lower.tail = FALSE)
require(graphics)
1 - pt(1:5, df = 1)
qt(.975, df = c(1:10,20,50,100,1000))
tt <- seq(0, 10, length.out = 21)
ncp <- seq(0, 6, length.out = 31)
ptn <- outer(tt, ncp, function(t, d) pt(t, df = 3, ncp = d))
t.tit <- "Non-central t - Probabilities"
image(tt, ncp, ptn, zlim = c(0,1), main = t.tit)
persp(tt, ncp, ptn, zlim = 0:1, r = 2, phi = 20, theta = 200, main = t.tit,
xlab = "t", ylab = "non-centrality parameter",
zlab = "Pr(T <= t)")
plot(function(x) dt(x, df = 3, ncp = 2), -3, 11, ylim = c(0, 0.32),
main = "Non-central t - Density", yaxs = "i")
pt(1:5, df = 1)
1 - pt(1:5, df = 1)
qt(.975, df = c(1:10,20,50,100,1000))
tt <- seq(0, 10, length.out = 21)
ncp <- seq(0, 6, length.out = 31)
ptn <- outer(tt, ncp, function(t, d) pt(t, df = 3, ncp = d))
t.tit <- "Non-central t - Probabilities"
image(tt, ncp, ptn, zlim = c(0,1), main = t.tit)
persp(tt, ncp, ptn, zlim = 0:1, r = 2, phi = 20, theta = 200, main = t.tit,
xlab = "t", ylab = "non-centrality parameter",
zlab = "Pr(T <= t)")
plot(function(x) dt(x, df = 3, ncp = 2), -3, 11, ylim = c(0, 0.32),
main = "Non-central t - Density", yaxs = "i")
2 * pt(abs(t_stat), df = length(heights) - 1, lower.tail = FALSE)
# (SAMPLE MEAN - NULL HYPOTHESIS VALUE) / (STANDARD DEVIATION / SQUARE ROOT OF n)
t_stat <- (mean(heights) - 69) / (sd(heights) / sqrt(length(heights)))
t_stat
p_val <- 2 * pt(abs(t_stat), df = length(heights) - 1, lower.tail = FALSE)
p_val
p_val <- 2 * pt(abs(t_stat), df = length(heights) - 1, lower.tail = FALSE)
# one-side lower-tailed only:
# pt(t_stat, df = length(heights) - 1, lower.tail = TRUE)
# one-side upper-tailed only:
# pt(t_stat, df = length(heights) - 1, lower.tail = FALSE)
p_val
p_val <- 2 * pt(abs(t_stat), df = length(heights) - 1, lower.tail = FALSE)
# one-side lower-tailed only:
# pt(t_stat, df = length(heights) - 1, lower.tail = TRUE)
# one-side upper-tailed only:
# pt(t_stat, df = length(heights) - 1, lower.tail = FALSE)
p_val
two_sided_p_val <- 2 * pt(abs(t_stat), df = length(heights) - 1, lower.tail = FALSE)
# one-side lower-tailed only:
lower_tail_p_val <-  pt(t_stat, df = length(heights) - 1, lower.tail = TRUE)
# one-side upper-tailed only:
upper_tail_pval <- pt(t_stat, df = length(heights) - 1, lower.tail = FALSE)
paste('two sided p-value:', two_sided_p_val)
paste('lower-tailed p-value',lower_tail_p_val)
paste('upper-tailed p-value:',upper_tail_pval)
two_sided_p_val <- 2 * pt(abs(t_stat), df = length(heights) - 1, lower.tail = FALSE)
# one-side lower-tailed only:
lower_tail_p_val <-  pt(t_stat, df = length(heights) - 1, lower.tail = TRUE)
# one-side upper-tailed only:
upper_tail_pval <- 1 - pt(t_stat, df = length(heights) - 1, lower.tail = FALSE)
paste('two sided p-value:', two_sided_p_val)
paste('lower-tailed p-value',lower_tail_p_val)
paste('upper-tailed p-value:',upper_tail_pval)
two_sided_p_val <- 2 * pt(abs(t_stat), df = length(heights) - 1, lower.tail = FALSE)
# one-side lower-tailed only:
lower_tail_p_val <-  pt(t_stat, df = length(heights) - 1, lower.tail = TRUE)
# one-side upper-tailed only:
upper_tail_pval <- pt(t_stat, df = length(heights) - 1, lower.tail = FALSE)
paste('two sided p-value:', two_sided_p_val)
paste('lower-tailed p-value',lower_tail_p_val)
paste('upper-tailed p-value:',upper_tail_pval)
